#Fundamentos de Coleções e LINQ com .NET


Arrays

O array é uma estrutura de dados que armazena valores do mesmo tipo, com um tamanho fixo.

int[] array = new int[4];

int[] array = new int[] { 42, 75, 74, 61 };

string[] nomes = { "Jan", "Fev" };

Exemplo prático: " Solução ExemploColecoes": Pasta OperacoesArray e  Program.


Coleção genérica

No C#, existem classes de coleções que agrupam valores, e essas classes são padronizadas para as operações mais comuns, como:

- Ordenação
- Obter valor por índice
- Obter valor com expressões
- Trabalhar com tamanhos dinâmicos

Exemplo prático: " Solução ExemploColecoes": Pasta  Program e OperaçõesLista


Coleção específica

As coleções específicas implementam regras para sua ordem de acesso e manipulação de seus elementos, são elas:

- Queue (Fila): Obedece a ordem FIFO (First In First Out)
- Stack (Pilha): Obedece a ordem LIFO (Last In First Out)

Exemplo prático: " Solução ExemploColecoes": Pasta  Program


Dicionários

 - Um dicionário é uma coleção de chave e valor, permitindo que você recupere rapidamente seus itens baseado em sua chave.

 - O dicionário armazena a sua chave em hash.

Criação de um dicionário:
Dictionary<string, string> estados = new Dictionary<string,string>()

Exemplo prático: " Solução ExemploColecoes": Pasta  Program


LINQ

O Language-Integrated Query (LINQ) é uma maneira de você utilizar uma sintaxe de consulta padronizada para coleções de objetos.

Exemplo prático: " Solução ExemploColecoes": Pasta  Program